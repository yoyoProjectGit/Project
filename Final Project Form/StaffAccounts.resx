<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="label9.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGhoAAAEAIAAgCwAAFgAAACgAAAAaAAAANAAAAAEAIAAAAAAAkAoAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAXQAAAHkAAACSAAAAiAAA
        AG4AAABKAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAYAAABpAAAAzQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD1AAAAqwAA
        ADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHAAAA2wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAKYAAAAVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdwAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAN8AAAAuAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAIcAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPIAAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD9AAAA/wAAAN8AAAAVAAAAAAAAAAAAAAAAAAAAGQAAAPUAAAD/AAAAYwAAANIAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/AAAAFMAAAC8AAAA/wAA
        AKcAAAAAAAAAAAAAAAAAAACaAAAA/wAAAJ0AAAAAAAAAEQAAAKEAAAD9AAAA/wAAAP8AAAD/AAAA/wAA
        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
</value>
  </data>
</root>